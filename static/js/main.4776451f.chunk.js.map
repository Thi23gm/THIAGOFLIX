{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","components/pages/MovieSearch.js","index.js","App.js","components/pages/Search.js"],"names":["API_KEY","basicFatch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","href","id","target","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","number_of_seasons","getFullYear","overview","join","black","to","MovieCard","movie","ReactDOM","render","path","component","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","console","log","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","exact","query","setQuery","movies","setMovies","searchMovies","e","preventDefault","url","res","data","error","onSubmit","placeholder","autocomplete","value","onChange","document","getElementById"],"mappings":"6QAAMA,EAAU,mCAGVC,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACCC,MAAM,GAAD,OAHR,gCAGQ,OAAeF,IADrB,cACXG,EADW,gBAEEA,EAAIC,OAFN,cAEXA,EAFW,yBAGVA,GAHU,2CAAH,sDAMD,GACbC,YAAY,WAAD,4BAAE,sBAAAJ,EAAA,sEAKMF,EAAW,4CAAD,OACuBD,IANvC,gCAGPQ,KAAM,WACNC,MAAO,UACPC,MALO,eAYMT,EAAW,8CAAD,OACyBD,IAbzC,gCAUPQ,KAAM,WACNC,MAAO,eACPC,MAZO,gBAmBMT,EAAW,wDAAD,OACmCD,IApBnD,iCAiBPQ,KAAM,YACNC,MAAO,uBACPC,MAnBO,gBA0BMT,EAAW,yDAAD,OACoCD,IA3BpD,iCAwBPQ,KAAM,SACNC,MAAO,UACPC,MA1BO,gBAiCMT,EAAW,yDAAD,OACoCD,IAlCpD,iCA+BPQ,KAAM,SACNC,MAAO,aACPC,MAjCO,gBAwCMT,EAAW,yDAAD,OACoCD,IAzCpD,mCAsCPQ,KAAM,SACNC,MAAO,SACPC,MAxCO,iBA+CMT,EAAW,4DAAD,OACuCD,IAhDvD,mCA6CPQ,KAAM,UACNC,MAAO,UACPC,MA/CO,6GAAF,kDAAC,GAsDZC,aAAa,WAAD,4BAAE,WAAOC,EAASC,GAAhB,eAAAV,EAAA,yDACRW,EAAO,IAEPF,EAHQ,sBAIFC,EAJE,OAKH,UALG,OASH,OATG,uCAMOZ,EAAW,UAAD,OAAWW,EAAX,mCAA6CZ,IAN9D,cAMNc,EANM,oDAUOb,EAAW,OAAD,OAAQW,EAAR,mCAA0CZ,IAV3D,eAUNc,EAVM,6DAgBLA,GAhBK,4CAAF,qDAAC,I,iDC3DA,cAAqB,IAAnBL,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACpB,EAA8BK,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OACI,sBAAKC,UAAU,WAAf,UACI,6BAAKT,IACL,qBAAKS,UAAU,iBAAiBC,QAnBhB,WACpB,IAAIC,EAAIJ,EAAUK,KAAKC,MAAMC,OAAOC,WAAa,GAC9CJ,EAAI,IACHA,EAAI,GAERH,EAAWG,IAcP,SACI,cAAC,IAAD,CAAoBK,MAAO,CAACC,SAAU,QAE1C,qBAAKR,UAAU,kBAAkBC,QAfhB,WACrB,IAAIC,EAAIJ,EAAUK,KAAKC,MAAMC,OAAOC,WAAa,GAC7CG,EAA+B,IAAvBjB,EAAMkB,QAAQC,OACtBN,OAAOC,WAAaG,EAASP,IAC7BA,EAAKG,OAAOC,WAAaG,EAAS,IAEtCV,EAAWG,IASP,SACI,cAAC,IAAD,CAAkBK,MAAO,CAACC,SAAU,QAExC,qBAAKR,UAAU,qBAAf,SACI,qBAAKA,UAAU,iBAAiBO,MAAO,CACnCK,WAAYd,EACZe,MAA8B,IAAvBrB,EAAMkB,QAAQC,QAFzB,SAIKnB,EAAMkB,QAAQC,OAAS,GAAKnB,EAAMkB,QAAQI,KAAI,SAACC,EAAMC,GAAP,OAC3C,qBAAehB,UAAU,iBAAzB,SACI,mBAAGiB,KAAI,uCAAkCF,EAAKG,IAAMC,OAAO,SAA3D,SAAoE,qBAAKC,IAAG,yCAAoCL,EAAKM,aAAeC,IAAOP,EAAKQ,oBAD1IP,cCpCnB,G,YAAA,YAAY,IAAVD,EAAS,EAATA,KAETS,EAAY,IAAIC,KAAKV,EAAKW,gBAC1BC,EAAS,GACb,IAAK,IAAIC,KAAKb,EAAKY,OACfA,EAAOE,KAAKd,EAAKY,OAAOC,GAAGE,MAG/B,OACI,yBAAS9B,UAAU,WAAWO,MAAO,CACjCwB,eAAe,QACfC,mBAAoB,SACpBC,gBAAgB,0CAAD,OAA4ClB,EAAKmB,cAAjD,MAHnB,SAMI,qBAAKlC,UAAU,qBAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,iBAAf,SAAiCe,EAAKoB,gBACtC,sBAAKnC,UAAU,iBAAf,UACI,sBAAKA,UAAU,mBAAf,UAAkC,mDAAlC,IAA6De,EAAKqB,aAAlE,WACA,sBAAKpC,UAAU,oBAAf,UAAoCe,EAAKsB,kBAAzC,aAAiG,IAA3BtB,EAAKsB,kBAA0B,IAAM,MAC3G,qBAAKrC,UAAU,iBAAf,SAAiCwB,EAAUc,mBAE/C,qBAAKtC,UAAU,wBAAf,SAAwCe,EAAKwB,WAC7C,qBAAKvC,UAAU,oBAAf,SACI,mBAAGA,UAAU,uBAAuBiB,KAAI,oCAA+BF,EAAKG,IAAMC,OAAO,SAAzF,oCAEJ,sBAAKnB,UAAU,mBAAf,UAAkC,4CAAlC,IAAyD2B,EAAOa,KAAK,kB,gBC1B1E,cAAc,IAAZC,EAAW,EAAXA,MACb,OACI,yBAAQzC,UAAWyC,EAAQ,QAAU,GAArC,UACI,qBAAKzC,UAAU,eAAf,SACI,cAAC,IAAD,CAAM0C,GAAG,IAAT,SACI,qBAAKtB,IAAI,mFAGjB,qBAAKpB,UAAU,iBAAf,SACI,cAAC,IAAD,CAAM0C,GAAG,UAAT,SACI,qBAAKtB,IAAI,2F,MCZd,SAASuB,EAAT,GAA4B,IAARC,EAAO,EAAPA,MAC/B,OACK,qBAAK5C,UAAU,OAAf,SACG,mBAAGiB,KAAI,uCAAkC2B,EAAM1B,IAAMC,OAAO,SAA5D,SACI,qBAAKnB,UAAU,cACXoB,IAAG,0DAAqDwB,EAAMvB,aAC9DC,IAAKsB,EAAMrD,MAAQ,gB,WCFvCsD,IAASC,OACP,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UCFP,WACb,MAAkCnD,mBAAS,IAA3C,mBAAOoD,EAAP,KAAkBC,EAAlB,KACA,EAAwCrD,mBAAS,MAAjD,mBAAOsD,EAAP,KAAqBC,EAArB,KACA,EAAsCvD,oBAAS,GAA/C,mBAAOwD,EAAP,KAAoBC,EAApB,KAqCA,OAnCAC,qBAAU,YACK,uCAAG,oCAAAtE,EAAA,sEACGuE,EAAKnE,cADR,cACVoE,EADU,OAEdP,EAAaO,GACbC,QAAQC,IAAIF,GAERG,EAAYH,EAAKI,QAAO,SAAAjC,GAAC,MAAe,cAAXA,EAAEtC,QAC/BwE,EAAe3D,KAAK4D,MAAM5D,KAAK6D,UAAYJ,EAAU,GAAGpE,MAAMkB,QAAQC,OAAS,IAC/EsD,EAASL,EAAU,GAAGpE,MAAMkB,QAAQoD,GAP1B,UAQSN,EAAK/D,aAAawE,EAAO/C,GAAI,MARtC,QAQVgD,EARU,OASdd,EAAgBc,GATF,4CAAH,qDAcbC,KACC,IAEHZ,qBAAU,WACR,IAAMa,EAAiB,WACjB/D,OAAOgE,QAAU,IACnBf,GAAe,GAGfA,GAAe,IAMnB,OAFAjD,OAAOiE,iBAAiB,SAAUF,GAE3B,WACL/D,OAAOkE,oBAAoB,SAAUH,MAEtC,IAGD,sBAAKpE,UAAU,OAAf,UAEA,cAAC,EAAD,CAAQyC,MAAOY,IAEZF,GACC,cAAC,EAAD,CAAepC,KAAQoC,IAGzB,yBAASnD,UAAU,QAAnB,SACGiD,EAAUnC,KAAI,SAACC,EAAMC,GAAP,OACX,cAAC,EAAD,CAAoBzB,MAASwB,EAAKxB,MAAOC,MAASuB,EAAKvB,OAAxCwB,QAIrB,mCACE,+CAAuB,uBACvB,wDDvDgCwD,OAAK,IACvC,cAAC,IAAD,CAAOzB,KAAK,UAAUC,UELb,WAEX,MAAsCnD,oBAAS,GAA/C,mBAAOwD,EAAP,KAAoBC,EAApB,KAEA,EAA0BzD,mBAAS,IAAnC,mBAAO4E,EAAP,KAAcC,EAAd,KAEA,EAA4B7E,mBAAS,IAArC,mBAAO8E,EAAP,KAAeC,EAAf,KAEMC,EAAY,uCAAG,WAAOC,GAAP,mBAAA7F,EAAA,6DAEjB6F,EAAEC,iBAEIC,EAJW,kHAIsGP,EAJtG,iDAQKvF,MAAM8F,GARX,cAQPC,EARO,gBASOA,EAAI7F,OATX,OASP8F,EATO,OAUbxB,QAAQC,IAAIuB,EAAKxE,SACjBkE,EAAUM,EAAKxE,SAXF,kDAcbgD,QAAQyB,MAAR,MAda,0DAAH,sDAmClB,OAjBA5B,qBAAU,WACN,IAAMa,EAAiB,WACjB/D,OAAOgE,QAAU,GACnBf,GAAe,GAGfA,GAAe,IAMnB,OAFAjD,OAAOiE,iBAAiB,SAAUF,GAE3B,WACL/D,OAAOkE,oBAAoB,SAAUH,MAEtC,IAGD,gCACI,cAAC,EAAD,CAAQ3B,MAAOY,IAChB,uBAAMrD,UAAU,OAAOoF,SAAUP,EAAjC,UACK,uBAAO7E,UAAU,QAAQL,KAAK,OAAOmC,KAAK,QACtCuD,YAAY,gBAAgBC,aAAa,MACzCC,MAAOd,EAAOe,SAAU,SAACV,GAAD,OAAOJ,EAASI,EAAE3D,OAAOoE,UAErD,wBAAQvF,UAAU,SAASL,KAAK,SAAhC,uBAEJ,qBAAKK,UAAU,YAAf,SACK2E,EAAOd,QAAO,SAAAjB,GAAK,OAAIA,EAAMvB,eAAaP,KAAI,SAAA8B,GAAK,OAEhD,qBAAK5C,UAAY,cAAjB,SACI,cAAC,EAAD,CAAa4C,MAAOA,GAAYA,EAAM1B,iBFnDxD,cAAC,IAAD,CAAO8B,UAAa,kBAAM,mDAG9ByC,SAASC,eAAe,W","file":"static/js/main.4776451f.chunk.js","sourcesContent":["const API_KEY = \"a8bb13ae488f4f310f033ae472901b1f\";\nconst API_BASE = \"https://api.themoviedb.org/3\";\n\nconst basicFatch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = await req.json();\n  return json;\n};\n\nexport default {\n  getHomeList: async () => {\n    return [\n      {\n        slug: \"toprated\",\n        title: \"Em Alta\",\n        items: await basicFatch(\n          `/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"trending\",\n        title: \"Recomendados\",\n        items: await basicFatch(\n          `/trending/all/week?&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"originals\",\n        title: \"Originais da Netflix\",\n        items: await basicFatch(\n          `/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"comedy\",\n        title: \"Comedia\",\n        items: await basicFatch(\n          `/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"action\",\n        title: \"Ação\",\n        items: await basicFatch(\n          `/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"horror\",\n        title: \"Terror\",\n        items: await basicFatch(\n          `/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"romance\",\n        title: \"Romance\",\n        items: await basicFatch(\n          `/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      \n    ];\n  },\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n    \n    if (movieId) {\n      switch (type) {\n        case 'movie':\n          info = await basicFatch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n        break;\n        \n        case 'tv':\n          info = await basicFatch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n        break;\n\n      }\n    }\n\n    return info;\n  }\n\n};\n","import React, {useState} from 'react'\nimport './MovieRow.css'\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, items}) => {\n    const [scrollX, setScrollX] = useState(0);\n\n    const handleLeftArrow = () => {\n        let x = scrollX + Math.round(window.innerWidth / 2);\n        if(x > 0){\n            x = 0;\n        }\n        setScrollX(x);\n    }\n    const handleRightArrow = () => {\n        let x = scrollX - Math.round(window.innerWidth / 2);\n        let listW = items.results.length * 210;\n        if((window.innerWidth - listW) > x){\n            x = (window.innerWidth - listW) - 60;\n        }\n        setScrollX(x);\n    }\n    \n    return (\n        <div className=\"movieRow\">\n            <h2>{title}</h2>\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n                <NavigateBeforeIcon style={{fontSize: 50}}/>\n            </div>\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\n                <NavigateNextIcon style={{fontSize: 50}}/>\n            </div>\n            <div className=\"movieRow--listarea\">\n                <div className='movieRow--list' style={{\n                    marginLeft: scrollX,\n                    width: items.results.length * 210\n                }}>\n                    {items.results.length > 0 && items.results.map((item, key)=>(\n                        <div key={key} className=\"movieRow--item\">\n                            <a href={`https://themoviedb.org/movie/${item.id}`} target=\"_blank\"><img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt = {item.original_title}/></a>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport './FeaturedMovie.css'\n\nexport default ({item}) =>{\n\n    let firstDate = new Date(item.first_air_date);\n    let genres = [];\n    for (let i in item.genres) {\n        genres.push(item.genres[i].name);\n    }\n\n    return(\n        <section className=\"featured\" style={{\n            backgroundSize:'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n\n        }}>\n            <div className=\"featured--vertical\">\n                <div className=\"featured--horizontal\">\n                    <div className=\"featured--name\">{item.original_name}</div>\n                    <div className=\"featured--info\">\n                        <div className=\"featured--points\"><span>Relevância: </span> {item.vote_average} / 10</div>\n                        <div className=\"featured--seasons\">{item.number_of_seasons} Temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n                        <div className=\"featured--yaer\">{firstDate.getFullYear()}</div>\n                    </div>\n                    <div className=\"featured--description\">{item.overview}</div>\n                    <div className=\"featured--buttons\">\n                        <a className=\"featured--infobutton\" href={`https://themoviedb.org/tv/${item.id}`} target=\"_blank\"> + Informações</a>\n                    </div>\n                    <div className=\"featured--genres\"><span>Generos:</span> {genres.join(', ')}</div>\n                </div>\n            </div>\n        </section>\n    )\n}","import React from 'react';\nimport './Header.css';\nimport {Link} from \"react-router-dom\";\n\nexport default ({black}) => {\n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n                <Link to=\"/\">\n                    <img src=\"https://fontmeme.com/permalink/210609/7807cf69799e8a5925514becb1c256c6.png\" />\n                </Link>\n            </div>\n            <div className=\"header--search\">\n                <Link to=\"/search\">\n                    <img src=\"https://icon-library.com/images/search-bar-icon-png/search-bar-icon-png-14.jpg\"/>\n                </Link>\n            </div>\n        </header>\n    );\n}","import React from \"react\";\n\nexport default function MovieCard({movie}){\n    return (\n         <div className=\"card\">\n            <a href={`https://themoviedb.org/movie/${movie.id}`} target=\"_blank\">\n                <img className=\"card--image\"\n                    src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n                    alt={movie.title + ' poster'}\n                    />\n            </a>\n\n        </div>\n    )\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Search from './components/pages/Search';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" component = {App} exact/>\n      <Route path=\"/search\" component = {Search} />\n      <Route component = {() => <div>Page 404</div>} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","import React, { useEffect, useState } from \"react\";\nimport Tmdb from \"./Tmdb\";\nimport MovieRow from './components/MovieRow';\nimport './App.css';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nexport default () => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n      console.log(list);\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n      \n\n    };\n\n    loadAll();\n  }, []);\n\n  useEffect(()=>{\n    const scrollListener = () => {\n      if (window.scrollY > 120) {\n        setBlackHeader(true);\n      }\n      else{\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n    <Header black={blackHeader}/>\n\n      {featuredData&&\n        <FeaturedMovie item = {featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n            <MovieRow key={key} title = {item.title} items = {item.items} />\n        ))}\n      </section>\n\n      <footer>\n        <i>&copy;THIAGOFLIX</i><br/>\n        <i>2021 - PUC MINAS</i> \n      </footer>\n    </div>\n  );\n};","import React, {useEffect, useState}  from 'react'\nimport './Search.css'\nimport Header from '../Header';\nimport MovieSearch from \"./MovieSearch\"\n\nexport default function SearchMovies(){\n\n    const [blackHeader, setBlackHeader] = useState(false);\n\n    const [query, setQuery] = useState('');\n\n    const [movies, setMovies] = useState([]);\n\n    const searchMovies = async (e) => \n    {\n        e.preventDefault();\n        \n        const url = `https://api.themoviedb.org/3/search/movie?api_key=a8bb13ae488f4f310f033ae472901b1f&language=pt-BR&query=${query}&page=1&include_adult=false`;\n        \n        try \n        {\n            const res = await fetch(url);\n            const data  = await res.json();\n            console.log(data.results);\n            setMovies(data.results);\n        }catch(err)\n        {\n            console.error(err);\n        }\n    }\n\n    useEffect(()=>{\n        const scrollListener = () => {\n          if (window.scrollY > 70) {\n            setBlackHeader(true);\n          }\n          else{\n            setBlackHeader(false);\n          }\n        }\n    \n        window.addEventListener('scroll', scrollListener);\n    \n        return () => {\n          window.removeEventListener('scroll', scrollListener);\n        }\n      }, []);\n\n    return (\n        <div>\n            <Header black={blackHeader}/>\n           <form className=\"form\" onSubmit={searchMovies}>\n                <input className=\"input\" type=\"text\" name=\"query\"\n                    placeholder=\"Nome do Filme\" autocomplete=\"off\" \n                    value={query} onChange={(e) => setQuery(e.target.value)}\n                    />\n                <button className=\"button\" type=\"submit\">Buscar</button>\n            </form>\n            <div className=\"card-list\">\n                {movies.filter(movie => movie.poster_path).map(movie => \n                (\n                    <div className = 'img--poster'>\n                        <MovieSearch movie={movie} key={movie.id} />\n                    </div>    \n                ))}\n            </div>\n                \n        </div>\n    )\n}\n"],"sourceRoot":""}